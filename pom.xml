<?xml version="1.0" encoding="UTF-8"?>
<!--suppress MavenModelInspection -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- PROJECT NAME -->
  <name>Ewon Flexy Extensions Library</name>
  <!-- PROJECT VERSION -->
  <version>2.0.0</version>
  <!-- PROJECT GROUP ID (PARENT PACKAGE) -->
  <groupId>com.hms_networks.americas.sc</groupId>
  <!-- PROJECT ARTIFACT ID (ROOT PACKAGE NAME) -->
  <artifactId>extensions</artifactId>
  <!-- PROJECT PACKAGING TYPE (ROOT OF MULTI-MODULE PROJECT) -->
  <packaging>pom</packaging>

  <!-- PROJECT ORGANIZATION -->
  <organization>
    <name>HMS Networks, Inc.</name>
    <url>https://hms-networks.com</url>
  </organization>

  <!-- PROJECT MODULES -->
  <modules>
    <module>alarms</module>
    <module>api</module>
    <module>config</module>
    <module>connectors</module>
    <module>datapoint</module>
    <module>ebd</module>
    <module>eventfile</module>
    <module>fileutils</module>
    <module>historicaldata</module>
    <module>json</module>
    <module>localdatafiles</module>
    <module>localization</module>
    <module>logging</module>
    <module>mqtt</module>
    <module>realtimedata</module>
    <module>retry</module>
    <module>security</module>
    <module>string</module>
    <module>system</module>
    <module>taginfo</module>
    <module>tagupdateservice</module>
    <module>util</module>
  </modules>

  <!-- PROJECT PROPERTIES -->
  <properties>
    <!-- Project Main Class -->
    <project.main.class>com.hms_networks.americas.sc.extensions.ExtensionsMain</project.main.class>
    <!-- Project Memory Heap Size -->
    <project.heap.size>25M</project.heap.size>

    <!-- Ewon Flexy Java Version -->
    <project.java.version>1.4</project.java.version>
    <!-- Compiler Java Version -->
    <project.build.jdk.version>jdk8u292-b10</project.build.jdk.version>
    <!-- Compiler Java JDK Name -->
    <project.build.jdk.name>1.8</project.build.jdk.name>
    <!-- Build Source Encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- Reporting Output Encoding -->
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <!-- Port for Ewon Flexy Java Debugger -->
    <project.build.debug.port>2800</project.build.debug.port>
    <!-- Maven Compiler Source Version -->
    <maven.compiler.source>${project.java.version}</maven.compiler.source>
    <!-- Maven Compiler Target Version -->
    <maven.compiler.target>${project.java.version}</maven.compiler.target>
  </properties>

  <!-- CUSTOM MAVEN REPOSITORIES FOR PROJECT -->
  <repositories>
    <!-- HMS Networks, MU Americas Solution Center Maven Repo -->
    <repository>
      <id>sc-java-maven-repo</id>
      <name>HMS Networks, MU Americas Solution Center Maven Repo</name>
      <url>https://github.com/hms-networks/sc-java-maven-repo/raw/main/</url>
    </repository>
  </repositories>

  <!-- BUILD CONFIGURATION, PLUGINS, AND EXTENSIONS -->
  <build>
    <plugins>
      <!-- Download JDK which can compile for Java 1.4 -->
      <plugin>
        <groupId>com.igormaznitsa</groupId>
        <artifactId>mvn-jlink-wrapper</artifactId>
      </plugin>

      <!-- Build compiled .jar output -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <!-- Build sources .jar output -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Build Javadocs .jar output -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <javadocExecutable>${build.jdk.path}${file.separator}bin${file.separator}javadoc
          </javadocExecutable>
          <show>private</show>
          <failOnWarnings>true</failOnWarnings>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <extensions>
      <!-- Extension for FTP connections in wagon-maven-plugin -->
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ftp</artifactId>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>

        <!-- Download JDK which can compile for Java 1.4 -->
        <plugin>
          <groupId>com.igormaznitsa</groupId>
          <artifactId>mvn-jlink-wrapper</artifactId>
          <version>1.1.0</version>
          <executions>
            <execution>
              <id>cache-jdk-for-build</id>
              <phase>initialize</phase>
              <goals>
                <goal>cache-jdk</goal>
              </goals>
              <configuration>
                <jdkPathProperty>build.jdk.path</jdkPathProperty>
                <jdkCachePath>${project.build.directory}${file.separator}buildJdk
                </jdkCachePath>
                <provider>ADOPT</provider>
                <providerConfig>
                  <release>${project.build.jdk.version}</release>
                  <arch>x64</arch>
                  <impl>hotspot</impl>
                  <project>jdk</project>
                </providerConfig>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Configure Maven compiler to use downloaded JDK -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
          <inherited>true</inherited>
          <configuration>
            <verbose>true</verbose>
            <fork>true</fork>
            <executable>${build.jdk.path}${file.separator}bin${file.separator}javac</executable>
            <compilerVersion>${project.build.jdk.name}</compilerVersion>
            <source>${project.java.version}</source>
            <target>${project.java.version}</target>
          </configuration>
        </plugin>

        <!-- Build compiled .jar output -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.3.0</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>

        <!-- Build sources .jar output -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.0</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Build Javadocs .jar output -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.6.2</version>
          <inherited>false</inherited>
          <executions>
            <execution>
              <id>aggregate-javadocs</id>
              <goals>
                <goal>aggregate-jar</goal>
              </goals>
              <phase>package</phase>
            </execution>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
              <configuration>
                <skip>true</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Create testing coverage report -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.7</version>
          <executions>
            <execution>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>generate-code-coverage-report</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Eclipse M2E settings. Note: this has no influence on the Maven build.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>com.igormaznitsa</groupId>
                    <artifactId>mvn-jlink-wrapper</artifactId>
                    <versionRange>[1.1.0,)</versionRange>
                    <goals>
                      <goal>cache-jdk</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <!-- PROJECT BUILD PROFILES -->
  <profiles>
    <profile>
      <id>noDebug</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <!--suppress UnresolvedMavenProperty -->
        <project.build.exec.url>http://${ewon.address}/rcgi.bin/jvmCmd?cmd=start&amp;runCmd=%20-heapsize%20${project.heap.size}%20-classpath%20/usr/${project.artifactId}-${project.version}-full.jar%20-emain%20${project.main.class}</project.build.exec.url>
      </properties>
    </profile>
    <profile>
      <id>debug</id>
      <properties>
        <!--suppress UnresolvedMavenProperty -->
        <project.build.exec.url>http://${ewon.address}/rcgi.bin/jvmCmd?cmd=start&amp;runCmd=%20-heapsize%20${project.heap.size}%20-classpath%20/usr/${project.artifactId}-${project.version}-full.jar%20-emain%20${project.main.class}%20-debugger%20-port%20${project.build.debug.port}</project.build.exec.url>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>debug-delay</id>
                <phase>deploy</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <sleep seconds="5"/>
                  </target>
                  <failOnError>true</failOnError>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>debugNoSuspend</id>
      <properties>
        <!--suppress UnresolvedMavenProperty -->
        <project.build.exec.url>http://${ewon.address}/rcgi.bin/jvmCmd?cmd=start&amp;runCmd=%20-heapsize%20${project.heap.size}%20-classpath%20/usr/${project.artifactId}-${project.version}-full.jar%20-emain%20${project.main.class}%20-debugger%20-port%20${project.build.debug.port}%20-nosuspend</project.build.exec.url>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>debug-delay</id>
                <phase>deploy</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <sleep seconds="5"/>
                  </target>
                  <failOnError>true</failOnError>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <!-- PROJECT DEPENDENCIES/LIBRARIES -->
  <dependencies>
    <!-- Code Test Framework -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

    <!-- Ewon ETK Library -->
    <dependency>
      <groupId>com.hms_networks.americas.sc.mvnlibs</groupId>
      <artifactId>ewon-etk</artifactId>
      <version>1.4.4</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
</project>
